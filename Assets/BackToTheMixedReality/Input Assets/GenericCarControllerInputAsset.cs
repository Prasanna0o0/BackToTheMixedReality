//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/BackToTheMixedReality/Input Assets/GenericCarControllerInputAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GenericCarControllerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GenericCarControllerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GenericCarControllerInputAsset"",
    ""maps"": [
        {
            ""name"": ""GenericCarControlAM"",
            ""id"": ""8a577417-5026-429c-a482-ab672c5e24b1"",
            ""actions"": [
                {
                    ""name"": ""Drive"",
                    ""type"": ""Value"",
                    ""id"": ""914b1b46-dc6f-44e0-82e1-0aa091cc49f9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Steer"",
                    ""type"": ""Value"",
                    ""id"": ""255f8cd8-ca6b-4f47-8f74-22a234fd86d1"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Value"",
                    ""id"": ""686a14c0-f312-4955-95cc-6cacf90d67dc"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EnableDisableCarController"",
                    ""type"": ""Button"",
                    ""id"": ""055f6614-0f2f-4129-bcec-e4794341bed5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuestDrive"",
                    ""type"": ""Value"",
                    ""id"": ""4618512e-59ca-496d-b18b-7d96e7ec3068"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""1e50648c-8045-476b-a41f-e838b5364e19"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f8ecbb24-397c-416c-81ed-b3e331b943b9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(max=0.3)"",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2943d74e-7895-49de-a8e3-6faf5d26747f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""9544074c-58a9-4e0d-8bb5-f8a3add4f7f0"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d0eb87d4-53e5-4a92-b148-bc5deba4ecea"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.125,max=0.3)"",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8626ba6e-ff7c-4d05-b5e6-9831b0e769af"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""QuestController"",
                    ""id"": ""baaba039-0d49-4cef-b70f-63fb08310e07"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3e86b8fe-b617-422c-9f7c-21580ffefcba"",
                    ""path"": ""<XRController>{LeftHand}/{PrimaryTrigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fd59e13b-c911-4d64-a44a-ba7285bf6a23"",
                    ""path"": ""<XRController>{RightHand}/{PrimaryTrigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6cdc0785-613c-4790-8080-2a60e4aa3d5a"",
                    ""path"": ""<XInputController>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d466aa54-8960-47ec-af47-3ced63e51a78"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ef232144-9177-4749-b709-070375949631"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0ea9ea84-785f-4019-a7b3-8f1fa8c0bc9d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8ff702c6-e7b8-4348-8156-40156ad2f3be"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7063c48c-eb18-4f3e-ae40-f22f54a3c4d5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e6de63c-794e-4ac5-97ac-d9d6e4fb40cf"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""096f51a6-c16f-4068-9c4f-4102348446a9"",
                    ""path"": ""<XRController>{LeftHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38aa6338-79fa-4ce6-9b40-29c2d0d7683b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableDisableCarController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90e10197-be07-4b44-bdb1-840b74f613f3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableDisableCarController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d1f9046-4074-4ea6-8ba2-f12342ee49a1"",
                    ""path"": ""<XRController>{RightHand}/thumbstickTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableDisableCarController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf954e82-758c-4343-a55e-9b70fdc724d8"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableDisableCarController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86d82453-bd39-429c-bfb9-dae34db9999a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableDisableCarController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fac3c5b4-5a2f-4504-9ad6-ec17153907a1"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuestDrive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GenericCarControlAM
        m_GenericCarControlAM = asset.FindActionMap("GenericCarControlAM", throwIfNotFound: true);
        m_GenericCarControlAM_Drive = m_GenericCarControlAM.FindAction("Drive", throwIfNotFound: true);
        m_GenericCarControlAM_Steer = m_GenericCarControlAM.FindAction("Steer", throwIfNotFound: true);
        m_GenericCarControlAM_Brake = m_GenericCarControlAM.FindAction("Brake", throwIfNotFound: true);
        m_GenericCarControlAM_EnableDisableCarController = m_GenericCarControlAM.FindAction("EnableDisableCarController", throwIfNotFound: true);
        m_GenericCarControlAM_QuestDrive = m_GenericCarControlAM.FindAction("QuestDrive", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GenericCarControlAM
    private readonly InputActionMap m_GenericCarControlAM;
    private List<IGenericCarControlAMActions> m_GenericCarControlAMActionsCallbackInterfaces = new List<IGenericCarControlAMActions>();
    private readonly InputAction m_GenericCarControlAM_Drive;
    private readonly InputAction m_GenericCarControlAM_Steer;
    private readonly InputAction m_GenericCarControlAM_Brake;
    private readonly InputAction m_GenericCarControlAM_EnableDisableCarController;
    private readonly InputAction m_GenericCarControlAM_QuestDrive;
    public struct GenericCarControlAMActions
    {
        private @GenericCarControllerInputActions m_Wrapper;
        public GenericCarControlAMActions(@GenericCarControllerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Drive => m_Wrapper.m_GenericCarControlAM_Drive;
        public InputAction @Steer => m_Wrapper.m_GenericCarControlAM_Steer;
        public InputAction @Brake => m_Wrapper.m_GenericCarControlAM_Brake;
        public InputAction @EnableDisableCarController => m_Wrapper.m_GenericCarControlAM_EnableDisableCarController;
        public InputAction @QuestDrive => m_Wrapper.m_GenericCarControlAM_QuestDrive;
        public InputActionMap Get() { return m_Wrapper.m_GenericCarControlAM; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GenericCarControlAMActions set) { return set.Get(); }
        public void AddCallbacks(IGenericCarControlAMActions instance)
        {
            if (instance == null || m_Wrapper.m_GenericCarControlAMActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GenericCarControlAMActionsCallbackInterfaces.Add(instance);
            @Drive.started += instance.OnDrive;
            @Drive.performed += instance.OnDrive;
            @Drive.canceled += instance.OnDrive;
            @Steer.started += instance.OnSteer;
            @Steer.performed += instance.OnSteer;
            @Steer.canceled += instance.OnSteer;
            @Brake.started += instance.OnBrake;
            @Brake.performed += instance.OnBrake;
            @Brake.canceled += instance.OnBrake;
            @EnableDisableCarController.started += instance.OnEnableDisableCarController;
            @EnableDisableCarController.performed += instance.OnEnableDisableCarController;
            @EnableDisableCarController.canceled += instance.OnEnableDisableCarController;
            @QuestDrive.started += instance.OnQuestDrive;
            @QuestDrive.performed += instance.OnQuestDrive;
            @QuestDrive.canceled += instance.OnQuestDrive;
        }

        private void UnregisterCallbacks(IGenericCarControlAMActions instance)
        {
            @Drive.started -= instance.OnDrive;
            @Drive.performed -= instance.OnDrive;
            @Drive.canceled -= instance.OnDrive;
            @Steer.started -= instance.OnSteer;
            @Steer.performed -= instance.OnSteer;
            @Steer.canceled -= instance.OnSteer;
            @Brake.started -= instance.OnBrake;
            @Brake.performed -= instance.OnBrake;
            @Brake.canceled -= instance.OnBrake;
            @EnableDisableCarController.started -= instance.OnEnableDisableCarController;
            @EnableDisableCarController.performed -= instance.OnEnableDisableCarController;
            @EnableDisableCarController.canceled -= instance.OnEnableDisableCarController;
            @QuestDrive.started -= instance.OnQuestDrive;
            @QuestDrive.performed -= instance.OnQuestDrive;
            @QuestDrive.canceled -= instance.OnQuestDrive;
        }

        public void RemoveCallbacks(IGenericCarControlAMActions instance)
        {
            if (m_Wrapper.m_GenericCarControlAMActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGenericCarControlAMActions instance)
        {
            foreach (var item in m_Wrapper.m_GenericCarControlAMActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GenericCarControlAMActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GenericCarControlAMActions @GenericCarControlAM => new GenericCarControlAMActions(this);
    public interface IGenericCarControlAMActions
    {
        void OnDrive(InputAction.CallbackContext context);
        void OnSteer(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnEnableDisableCarController(InputAction.CallbackContext context);
        void OnQuestDrive(InputAction.CallbackContext context);
    }
}
